name: Build and Release
on:
  push:
    branches: ['*']
    tags: ['*']
jobs:
  linux:
    name: Linux Build
    runs-on: ubuntu-22.04
    env:
      PACKAGE_NAME: env_to_props
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Set Up Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
      - name: Compile
        run: >
          docker container run --rm 
          --volume ${{ github.workspace }}:/src
          --volume ${HOME}/.cargo/git:/usr/local/cargo/git
          --volume ${HOME}/.cargo/registry:/usr/local/cargo/registry
          --user "$(id --user):$(id --group)"
          unixgeek2/rust-min-libc:latest build --release
      - name: Create Build Artifact
        run: |
          mkdir ${PACKAGE_NAME}-${GITHUB_REF_NAME}-linux-x86_64
          cp target/release/env-to-props ${PACKAGE_NAME}-${GITHUB_REF_NAME}-linux-x86_64/
          tar -cJf ${PACKAGE_NAME}-${GITHUB_REF_NAME}-linux-x86_64.txz ${PACKAGE_NAME}-${GITHUB_REF_NAME}-linux-x86_64
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: linux-x86_64
          path: ${{ env.PACKAGE_NAME }}-${{ github.ref_name }}-linux-x86_64.txz
  release:
    name: Create Release
    runs-on: ubuntu-22.04
    needs: linux
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3.0.1
      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: linux-x86_64/**
